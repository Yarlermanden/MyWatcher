@using MyWatcher.Models
@using MudBlazor

<h3>UserItemTable</h3>
<MudTable Items="@_tableItemList">
    <HeaderContent>
        <MudTh><strong>Id</strong></MudTh>
        <MudTh><strong>Name</strong></MudTh>
        <MudTh><strong>Price</strong></MudTh>
        <MudTh><strong>Last Scanned</strong></MudTh>
        <MudTh><strong>Active</strong></MudTh>
    </HeaderContent>
    <NoRecordsContent>
        <Empty Simple/>
    </NoRecordsContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Id">@context.Name</MudTd>
        <MudTd DataLabel="Id">@context.Price</MudTd>
        <MudTd DataLabel="Id">@context.LastScan</MudTd>
        <MudTd DataLabel="Id">@context.Activate</MudTd>
    </RowTemplate>
</MudTable>

@code {
    //private MudTable<UserItemTableDTO> _table;

    private List<UserItemTableDTO> _tableItemList;
    [Parameter] public List<UserItemTableDTO> UserItemList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _tableItemList = new List<UserItemTableDTO>();
    //_table = new MudTable<UserItemTableDTO>();

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //_table.Items = TableItemList.Select(i => i);
            _tableItemList = UserItemList;
        }
    }
}